// -- Model dump before bytecode pipeline
module 0x8675309::M {
    struct G {
        f: #0,
    }
    struct R {
        f: u64,
    }
    struct S {
        u: u64,
    }
    private fun t0(r: &M::R,r_mut: &mut M::R,s: M::S,s_ref: &M::S,s_mut: &mut M::S) {
        false;
        false;
        false;
        false;
        false;
        Eq<u64>(Borrow(Immutable)(0), Borrow(Immutable)(1));
        false;
        false;
        Eq<M::S>(Borrow(Immutable)(s), s_ref);
        Eq<M::S>(Freeze(false)(Borrow(Mutable)(s)), s_ref);
        Eq<M::S>(Freeze(false)(Borrow(Mutable)(s)), Freeze(false)(s_mut));
        Eq<M::S>(Borrow(Immutable)(s), Freeze(false)(s_mut));
        Eq<M::S>(s_ref, Freeze(false)(s_mut));
        Eq<M::S>(Freeze(false)(s_mut), Freeze(false)(s_mut));
        Eq<M::S>(pack M::S(0), s);
        Eq<M::R>(r, r);
        Eq<M::R>(Freeze(false)(r_mut), Freeze(false)(r_mut));
        Eq<M::R>(r, Freeze(false)(r_mut));
        Eq<M::R>(Freeze(false)(r_mut), r);
        Eq<M::G<u64>>(pack M::G<u64>(1), pack M::G<u64>(1));
        Eq<M::G<u64>>(pack M::G<u64>(1), pack M::G<u64>(1));
        Tuple()
    }
} // end 0x8675309::M

// -- Sourcified model before bytecode pipeline
module 0x8675309::M {
    struct G<T> has drop {
        f: T,
    }
    struct R {
        f: u64,
    }
    struct S has drop {
        u: u64,
    }
    fun t0(r: &R, r_mut: &mut R, s: S, s_ref: &S, s_mut: &mut S) {
        false;
        false;
        false;
        false;
        false;
        &0 == &1;
        false;
        false;
        &s == s_ref;
        /*freeze*/&mut s == s_ref;
        /*freeze*/&mut s == /*freeze*/s_mut;
        &s == /*freeze*/s_mut;
        s_ref == /*freeze*/s_mut;
        /*freeze*/s_mut == /*freeze*/s_mut;
        S{u: 0} == s;
        r == r;
        /*freeze*/r_mut == /*freeze*/r_mut;
        r == /*freeze*/r_mut;
        /*freeze*/r_mut == r;
        G<u64>{f: 1} == G<u64>{f: 1};
        G<u64>{f: 1} == G<u64>{f: 1};
    }
}
